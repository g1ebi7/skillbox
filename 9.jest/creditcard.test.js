import { isValid, isSecurityCodeValid } from 'creditcard.js';

//Тесты на номер карты
test('Валидация номера карты пропускает корректный номер карты.', () => {
  expect(isValid('4222222222222')).toBe(true);
});
test('Валидация номера карты не пропускает произвольную строку, содержащую любые нецифровые символы.', () => {
  expect(isValid('422,2222л2222')).toBe(false);
});
test('Валидация номера карты не пропускает строку с недостаточным количеством цифр.', () => {
  expect(isValid('42222')).toBe(false);
});
test('Валидация номера карты не пропускает строку со слишком большим количеством цифр', () => {
  expect(isValid('42222222224444444442')).toBe(false);
});
//Тесты на cvv-код, тут надо указывать номер карты, функция сравнивает что это возможно
test('Валидация CVV/CVC пропускает строку с тремя цифровыми символами.', () => {
  expect(isSecurityCodeValid('4222222222222', '355')).toBe(true);
});
test('Валидация CVV/CVC не пропускает строки с 1-2 цифровыми символами.', () => {
  expect(isSecurityCodeValid('4222222222222', '35')).toBe(false);
});
test('Валидация CVV/CVC не пропускает строки с 4+ цифровыми символами.', () => {
  expect(isSecurityCodeValid('4222222222222', '353533')).toBe(false);
});
test('Валидация CVV/CVC не пропускает строки с тремя нецифровыми символами (латиница, кириллица и знаки препинания).', () => {
  expect(isSecurityCodeValid('4222222222222', 'j,р')).toBe(false);
});
